// This file was generated by gir (c3b4020) from gir-files (71d73f0)
// DO NOT EDIT

use ffi;
use glib::translate::*;

bitflags! {
    pub flags ApplicationFlags: u32 {
        const APPLICATION_FLAGS_NONE = 0,
        const APPLICATION_IS_SERVICE = 1,
        const APPLICATION_IS_LAUNCHER = 2,
        const APPLICATION_HANDLES_OPEN = 4,
        const APPLICATION_HANDLES_COMMAND_LINE = 8,
        const APPLICATION_SEND_ENVIRONMENT = 16,
        const APPLICATION_NON_UNIQUE = 32,
        const APPLICATION_CAN_OVERRIDE_APP_ID = 64,
    }
}

#[doc(hidden)]
impl ToGlib for ApplicationFlags {
    type GlibType = ffi::GApplicationFlags;

    fn to_glib(&self) -> ffi::GApplicationFlags {
        ffi::GApplicationFlags::from_bits_truncate(self.bits())
    }
}

#[doc(hidden)]
impl FromGlib<ffi::GApplicationFlags> for ApplicationFlags {
    fn from_glib(value: ffi::GApplicationFlags) -> ApplicationFlags {
        ApplicationFlags::from_bits_truncate(value.bits())
    }
}

bitflags! {
    pub flags ResourceLookupFlags: u32 {
        const RESOURCE_LOOKUP_FLAGS_NONE = 0,
    }
}

#[doc(hidden)]
impl ToGlib for ResourceLookupFlags {
    type GlibType = ffi::GResourceLookupFlags;

    fn to_glib(&self) -> ffi::GResourceLookupFlags {
        ffi::GResourceLookupFlags::from_bits_truncate(self.bits())
    }
}

#[doc(hidden)]
impl FromGlib<ffi::GResourceLookupFlags> for ResourceLookupFlags {
    fn from_glib(value: ffi::GResourceLookupFlags) -> ResourceLookupFlags {
        ResourceLookupFlags::from_bits_truncate(value.bits())
    }
}

bitflags! {
    pub flags SettingsBindFlags: u32 {
        const SETTINGS_BIND_DEFAULT = 0,
        const SETTINGS_BIND_GET = 1,
        const SETTINGS_BIND_SET = 2,
        const SETTINGS_BIND_NO_SENSITIVITY = 4,
        const SETTINGS_BIND_GET_NO_CHANGES = 8,
        const SETTINGS_BIND_INVERT_BOOLEAN = 16,
    }
}

#[doc(hidden)]
impl ToGlib for SettingsBindFlags {
    type GlibType = ffi::GSettingsBindFlags;

    fn to_glib(&self) -> ffi::GSettingsBindFlags {
        ffi::GSettingsBindFlags::from_bits_truncate(self.bits())
    }
}

#[doc(hidden)]
impl FromGlib<ffi::GSettingsBindFlags> for SettingsBindFlags {
    fn from_glib(value: ffi::GSettingsBindFlags) -> SettingsBindFlags {
        SettingsBindFlags::from_bits_truncate(value.bits())
    }
}

